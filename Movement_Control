import React from 'react';
import { ArrowUp, ArrowDown, ArrowLeft, ArrowRight, RotateCcw, RotateCw } from 'lucide-react';

interface MovementControlsProps {
  isActive: boolean;
  onMove: (direction: string) => void;
}

export const MovementControls: React.FC<MovementControlsProps> = ({ isActive, onMove }) => {
  const controls = [
    { icon: ArrowUp, action: 'forward', label: 'Forward' },
    { icon: ArrowDown, action: 'backward', label: 'Backward' },
    { icon: ArrowLeft, action: 'left', label: 'Turn Left' },
    { icon: ArrowRight, action: 'right', label: 'Turn Right' },
    { icon: RotateCcw, action: 'rotate-left', label: 'Rotate Left' },
    { icon: RotateCw, action: 'rotate-right', label: 'Rotate Right' },
  ];

  return (
    <div className="bg-gray-800 rounded-xl p-6 border border-gray-700">
      <h3 className="text-lg font-semibold text-white mb-4">Movement Controls</h3>
      
      <div className="grid grid-cols-3 gap-3">
        {/* Forward */}
        <div></div>
        <button
          onClick={() => onMove('forward')}
          disabled={!isActive}
          className={`p-4 rounded-lg transition-all duration-200 ${
            isActive
              ? 'bg-blue-600 hover:bg-blue-700 text-white shadow-lg shadow-blue-500/25'
              : 'bg-gray-700 text-gray-500 cursor-not-allowed'
          }`}
        >
          <ArrowUp className="w-6 h-6 mx-auto" />
        </button>
        <div></div>
        
        {/* Left, Stop, Right */}
        <button
          onClick={() => onMove('left')}
          disabled={!isActive}
          className={`p-4 rounded-lg transition-all duration-200 ${
            isActive
              ? 'bg-blue-600 hover:bg-blue-700 text-white shadow-lg shadow-blue-500/25'
              : 'bg-gray-700 text-gray-500 cursor-not-allowed'
          }`}
        >
          <ArrowLeft className="w-6 h-6 mx-auto" />
};
